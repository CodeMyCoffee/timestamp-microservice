 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/*').get(function(req, res) {  
  var monthNames = ["January", "February", "March", "April", "May", "June",
  "July", "August", "September", "October", "November", "December"];
    var timeRequested = req.url.substring(1);
    var results = []
    if(timeRequested.indexOf('%') != -1){
       results = fromNatural(timeRequested, monthNames)
    }else if ((new Date(timeRequested * 1000)).getTime() > 0){
       results = fromUnix(timeRequested, monthNames)
    }else{
      results = [null,null]
    }
    res.send(JSON.stringify({"unix":results[0], "natural":results[1]}))
  })

function fromUnix(timeRequested, monthNames){
  var date = new Date(timeRequested * 1000);
  const month = monthNames[date.getMonth()];
  const day = date.getDay();
  const year = date.getFullYear();
  var natural = month+' '+day+', '+year;
  return [timeRequested,natural]
}

function fromNatural(timeRequested,monthNames){
  
  var natural = decodeURI(timeRequested)
  
  const date = natural.split(" ");
  const monthNumber = monthNames.indexOf(date[0])+1;
  const day = date[1].slice(0,-1);
  const year = date[2]
  
  var dateTime = +new Date(year+'-'+monthNumber+'-'+day);
  var unix = Math.floor(dateTime / 1000);
  
  return [unix,natural];
}

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

